from pyramid.config import Configurator
from pyramid.authentication import SessionAuthenticationPolicy
from pyramid.authorization import ACLAuthorizationPolicy
from sqlalchemy import engine_from_config

from .models import (
    DBSession,
    Base,
    UserSession
    )

import pyramid_beaker

def main(global_config, **settings):
    """ This function returns a Pyramid WSGI application.
    """
    engine = engine_from_config(settings, 'sqlalchemy.')
    # complete setting up session handling
    settings['session.bind'] = engine
    settings['session.table'] = UserSession.__table__
    session_factory = pyramid_beaker.session_factory_from_settings(settings)
    authentication = SessionAuthenticationPolicy()
    authorization = ACLAuthorizationPolicy()

    DBSession.configure(bind=engine)
    Base.metadata.bind = engine

    config = Configurator(settings=settings,
        authentication_policy=authentication,
        authorization_policy=authorization,
        session_factory=session_factory)
    config.add_static_view('static', 'static', cache_max_age=3600)
    config.add_route('home', '/')
    config.add_route('sign_in', '/sign_in')
    config.add_route('sign_up', '/sign_up')
    config.add_route('sign_out', '/sign_out')
    config.scan()
    return config.make_wsgi_app()
